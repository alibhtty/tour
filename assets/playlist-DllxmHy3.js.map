{"version":3,"file":"playlist-DllxmHy3.js","sources":["../../src/component/playlist/playlist-details.jsx","../../src/component/playlist/playlist-footer.jsx","../../src/component/playlist/playlist-track.jsx","../../src/pages/playlist.jsx"],"sourcesContent":["import React from 'react';\nimport TitleS from '../text/title-s';\nimport TextBoldM from '../text/text-bold-m';\nimport TextRegularM from '../text/text-regular-m';\nimport styles from \"./playlist-details.module.css\";\nimport { NavLink } from 'react-router-dom';\nimport { PLAYLIST } from '../../data/index'; \n\nfunction PlaylistDetails({ data, duracionTotal, artistBio }) {\n    // Función para buscar el perfil del artista\n    const findArtistLink = (artistName) => {\n        const artist = PLAYLIST.find(a => a.artist.toLowerCase() === artistName.toLowerCase());\n        return artist ? `/artist/${artist.artist}` : '#'; // Ajusta esto según la estructura de tu URL\n    };\n\n    const artistLink = findArtistLink(data.artist);\n\n    return (\n        <div className={styles.playlistDetails}>\n            <div className={styles.imgBox}>\n                <img src={data.imgUrl} alt={`${data.title} cover`} />\n            </div>\n            <div className={styles.textBox}>\n\n                <TitleS>{data.type}</TitleS>\n                <h1>{data.title}</h1>\n\n                <div className={styles.Artist}>\n                    <NavLink className={styles.artistLink} to={artistLink} rel=\"noopener noreferrer\">\n                    <figure>\n                        <img src={data.artistImgUrl} alt={`${data.artist} image`} />\n                    </figure>\n                        <TextBoldM>{data.artist}</TextBoldM>\n                    </NavLink> \n                \n                    <TextRegularM className={styles.duracion}>⌁ {duracionTotal}</TextRegularM>\n                </div>\n                {/* <div>\n                    <TextRegularM className={styles.bio}>{data.artistBio}</TextRegularM>\n                </div> */}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default PlaylistDetails;\n","import React from 'react';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Autoplay } from \"swiper/modules\";\nimport \"swiper/css\"; // Importa los estilos básicos de Swiper\nimport TitleS from '../text/title-s';\nimport TextBoldM from '../text/text-bold-m';\nimport styles from './playlist-footer.module.css';\n\nfunction PlaylistFooter({ data }) {\n  // Verificar si hay imágenes en la playlist\n  const hasImages = data.playlistImages && data.playlistImages.length > 0;\n\n  // Renderizar el Swiper si hay imágenes\n  const renderSwiper = () => {\n    if (!hasImages) return null;\n\n    return (\n      <Swiper\n        modules={[Autoplay]}\n        autoplay={{ delay: 4000, disableOnInteraction: false }}\n        loop={true}\n        speed={1500}\n        spaceBetween={10} // Espacio entre slides\n        slidesPerView={1} // Muestra una imagen por vez\n        style={{ aspectRatio: '4 / 4' }} // Mantiene la proporción 5x8\n        className={styles.swiperContainer}\n      >\n        {data.playlistImages.map((image, index) => (\n          <SwiperSlide key={index}>\n            <img src={image} alt={`Slide ${index + 1}`} className={styles.image} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    );\n  };\n\n  return (\n    <div className={styles.footerDetails}>\n      {renderSwiper()}\n\n      <div className={styles.textBox}>\n        <div className={styles.Artist}>\n          <figure>\n            <img src={data.artistImgUrl} alt=\"Artist\" />\n          </figure>\n          <div className={styles.boxBio}>\n            <a\n              className={styles.textBio}\n              href={data.artistBio}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Seguir\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistFooter;","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { changePlay } from '../../actions';\nimport TextBoldL from \"../text/text-bold-l\";\nimport TextRegularM from \"../text/text-regular-m\";\nimport Playgif from '../../image/now-play.webp';\nimport * as Icons from '../icons';\n\nimport styles from \"./playlist-track.module.css\";\n\nfunction PlaylistTrack(props) {\n    const [thisSong, setthisSong] = useState(false);\n\n    /*setInterval(function(){\n        setthisSong(props.data.song.link == localStorage.getItem('playedSong'));\n    }, 50);*/\n    \n    useEffect(() => {\n        if(props.data.song.link === props.trackData.track && props.isPlaying === true){\n            setthisSong(true)\n        }else {\n            setthisSong(false)\n        }\n\t})\n    \n\treturn (\n\t\t<div \n            className={`${styles.trackDiv} ${thisSong ? \"activeTrack\" : \"\"}`}\n            style={\n                props.data.listType === \"album\" \n                    ? {gridTemplateColumns: '2em 1fr 4em'} \n                    : {}\n            }\n        >   \n            <button\n                className={styles.playBtn}\n                onClick={() => props.changePlay(!props.isPlaying)}\n            >\n                {thisSong \n                    ? <Icons.Pause /> \n                    : <Icons.Play />\n                }\n            </button>\n\n            {thisSong \n                    ? <img className={styles.gif} src={Playgif} /> \n                    : <p className={styles.SongIndex}>{props.data.song.index}</p>\n            }\n\n\t\t\t{props.data.listType === \"album\" ? \"\" : <img src={props.data.song.songimg} />}\n\n\t\t\t<span className={styles.textos}>\n\t\t\t\t<TextBoldL>{props.data.song.songName}</TextBoldL>\n\t\t\t\t<TextRegularM>{props.data.song.songArtist}</TextRegularM>\n\t\t\t</span>\n\n\t\t\t<p className={styles.trackTime}>{props.data.song.trackTime}</p>\n\t\t</div>\n\t);\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisPlaying: state.isPlaying,\n        trackData: state.trackData\n\t};\n};\n  \nexport default connect(mapStateToProps, { changePlay })(PlaylistTrack);","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { connect } from 'react-redux';\nimport { changeTrack } from '../actions';\nimport { motion } from 'framer-motion';\nimport Topnav from '../component/topnav/topnav';\nimport TextRegularM from \"../component/text/text-regular-m\";\nimport PlayButton from '../component/buttons/play-button';\nimport PlaylistDetails from '../component/playlist/playlist-details';\nimport PlaylistFooter from '../component/playlist/playlist-footer';\nimport PlaylistTrack from '../component/playlist/playlist-track';\nimport { calcularDuracionPlaylist } from '../utils/utils';\nimport styles from './playlist.module.css';\nimport { PLAYLIST } from '../data/index';\n//import { useData } from '../context/DataContext';\n\nfunction PlaylistPage(props) {\n    const [playlistIndex, setPlaylistIndex] = useState(undefined);\n    const [isThisPlay, setIsThisPlay] = useState(false);\n    const { path } = useParams();\n\n    useEffect(() => {\n        setIsThisPlay(playlistIndex === props.trackData.trackKey[0]);\n    }, [playlistIndex, props.trackData.trackKey]);\n\n    useEffect(() => {\n        const fetchPlaylist = () => {\n            /* const playlist = PLAYLIST.find(item => item.link === path); */\n            const playlist = PLAYLIST.find(\n                item => item.link === path && item.type === \"playlist\"\n            );\n            if (playlist) {\n                changeBg(playlist.playlistBg);\n                setPlaylistIndex(PLAYLIST.indexOf(playlist));\n            }\n        };\n\n        fetchPlaylist();\n    }, [path, PLAYLIST]);\n\n    function changeBg(color) {\n        document.documentElement.style.setProperty('--hover-home-bg', color);\n    }\n\n    const handleSongClick = async (item, song) => {\n        try {\n            const playlistIndex = PLAYLIST.indexOf(item);\n            const songIndex = item.playlistData.findIndex(s => s.index === song.index);\n\n            if (playlistIndex !== -1 && songIndex !== -1) {\n                props.changeTrack([playlistIndex, songIndex]);\n                const songAudio = await props.loadAudio(song.songUrl);\n                props.playAudio(songAudio);\n            } else {\n                console.error('Error: Pista no encontrada');\n            }\n        } catch (error) {\n            //console.error('Error during song playback:', error);    IMPORTANTE, CAUSADO POR EL CLICK AL CAMBIAR\n        }\n    };\n\n    return (\n        <motion.div\n            className={styles.PlaylistPage}\n            initial={{ opacity: 0, scale: 1.0001 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: .6, ease: \"easeInOut\" }}\n        >\n            <div className={styles.gradientBg}></div>\n            <div className={styles.gradientBgSoft}></div>\n            <div className={styles.Bg}></div>\n\n            <Topnav />\n\n            {PLAYLIST.map((item) => {\n                if (item.link === path) {\n                    const duracionTotal = calcularDuracionPlaylist(item.playlistData);\n\n                    return (\n                        <div key={item.title}>\n                            <PlaylistDetails \n                                data={item} \n                                duracionTotal={duracionTotal} // Pasa la duración total como prop\n                            />\n                        \n                            <div className={styles.PlaylistIcons}>\n                                <div onClick={() => handleSongClick(item, item.playlistData[0])}>\n                                    <PlayButton isthisplay={isThisPlay} />\n                                </div>\n                            </div>\n\n                            <div className={styles.ListHead}>\n                                <TextRegularM>#</TextRegularM>\n                                <TextRegularM>Título</TextRegularM>\n                                <TextRegularM>Duración</TextRegularM>\n                            </div>\n\n                            <div className={styles.PlaylistSongs}>\n                                {item.playlistData.map((song) => (\n                                    <div \n                                        key={song.index} \n                                        onClick={() => handleSongClick(item, song)} \n                                        className={styles.SongBtn}\n                                    >\n                                        <PlaylistTrack \n                                            data={{\n                                                listType: item.type,\n                                                song: song\n                                            }}\n                                        />\n                                    </div>\n                                ))}\n                            </div>\n\n                            <PlaylistFooter data={item} />\n                        </div>\n                    );\n                }\n            })}\n        </motion.div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    trackData: state.trackData,\n});\n\nexport default connect(mapStateToProps, { changeTrack })(PlaylistPage);"],"names":["PlaylistDetails","data","duracionTotal","artistBio","artistLink","artistName","artist","PLAYLIST","a","jsxs","styles","jsx","TitleS","NavLink","TextBoldM","TextRegularM","PlaylistFooter","hasImages","renderSwiper","Swiper","Autoplay","image","index","SwiperSlide","PlaylistTrack","props","thisSong","setthisSong","useState","useEffect","Icons.Pause","Icons.Play","Playgif","TextBoldL","mapStateToProps","state","connect","changePlay","PlaylistPage","playlistIndex","setPlaylistIndex","isThisPlay","setIsThisPlay","path","useParams","playlist","item","changeBg","color","handleSongClick","song","songIndex","s","songAudio","motion","Topnav","calcularDuracionPlaylist","PlayButton","changeTrack"],"mappings":"mgBAQA,SAASA,EAAgB,CAAE,KAAAC,EAAM,cAAAC,EAAe,UAAAC,GAAa,CAOnD,MAAAC,GALkBC,GAAe,CAC7B,MAAAC,EAASC,EAAS,KAAUC,GAAAA,EAAE,OAAO,YAAY,IAAMH,EAAW,YAAa,CAAA,EACrF,OAAOC,EAAS,WAAWA,EAAO,MAAM,GAAK,GAAA,GAGfL,EAAK,MAAM,EAE7C,OACKQ,EAAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,gBACnB,SAAA,CAAAC,MAAC,MAAI,CAAA,UAAWD,EAAO,OACnB,eAAC,MAAI,CAAA,IAAKT,EAAK,OAAQ,IAAK,GAAGA,EAAK,KAAK,QAAU,CAAA,EACvD,EACCQ,EAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,QAEnB,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAQ,WAAK,IAAK,CAAA,EACnBD,EAAAA,IAAC,KAAI,CAAA,SAAAV,EAAK,KAAM,CAAA,EAEfQ,EAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,OACnB,SAAA,CAAAD,EAAAA,KAACI,GAAQ,UAAWH,EAAO,WAAY,GAAIN,EAAY,IAAI,sBAC3D,SAAA,CAACO,EAAA,IAAA,SAAA,CACG,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAKV,EAAK,aAAc,IAAK,GAAGA,EAAK,MAAM,QAAU,CAAA,EAC9D,EACIU,EAAAA,IAACG,EAAW,CAAA,SAAAb,EAAK,MAAO,CAAA,CAAA,EAC5B,EAECQ,EAAA,KAAAM,EAAA,CAAa,UAAWL,EAAO,SAAU,SAAA,CAAA,KAAGR,CAAA,EAAc,CAAA,EAC/D,CAAA,EAKJ,CACJ,CAAA,CAAA,CAER,8XCpCA,SAASc,GAAe,CAAE,KAAAf,GAAQ,CAEhC,MAAMgB,EAAYhB,EAAK,gBAAkBA,EAAK,eAAe,OAAS,EAGhEiB,EAAe,IACdD,EAGHN,EAAA,IAACQ,EAAA,CACC,QAAS,CAACC,CAAQ,EAClB,SAAU,CAAE,MAAO,IAAM,qBAAsB,EAAM,EACrD,KAAM,GACN,MAAO,KACP,aAAc,GACd,cAAe,EACf,MAAO,CAAE,YAAa,OAAQ,EAC9B,UAAWV,EAAO,gBAEjB,SAAAT,EAAK,eAAe,IAAI,CAACoB,EAAOC,IAC/BX,EAAAA,IAACY,EACC,CAAA,SAAAZ,EAAAA,IAAC,MAAI,CAAA,IAAKU,EAAO,IAAK,SAASC,EAAQ,CAAC,GAAI,UAAWZ,EAAO,KAAA,CAAO,CADrD,EAAAY,CAElB,CACD,CAAA,CAAA,EAjBkB,KAsBzB,OACGb,EAAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,cACpB,SAAA,CAAaQ,EAAA,EAEdP,EAAAA,IAAC,OAAI,UAAWD,EAAO,QACrB,SAACD,EAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,OACrB,SAAA,CAACC,EAAAA,IAAA,SAAA,CACC,eAAC,MAAI,CAAA,IAAKV,EAAK,aAAc,IAAI,SAAS,CAC5C,CAAA,EACCU,EAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,OACrB,SAAAC,EAAA,IAAC,IAAA,CACC,UAAWD,EAAO,QAClB,KAAMT,EAAK,UACX,OAAO,SACP,IAAI,sBACL,SAAA,QAAA,CAAA,EAGH,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,sNCjDA,SAASuB,GAAcC,EAAO,CAC1B,KAAM,CAACC,EAAUC,CAAW,EAAIC,WAAS,EAAK,EAM9CC,OAAAA,EAAAA,UAAU,IAAM,CACTJ,EAAM,KAAK,KAAK,OAASA,EAAM,UAAU,OAASA,EAAM,YAAc,GACrEE,EAAY,EAAI,EAEhBA,EAAY,EAAK,CACrB,CACN,EAGAlB,EAAA,KAAC,MAAA,CACS,UAAW,GAAGC,EAAO,QAAQ,IAAIgB,EAAW,cAAgB,EAAE,GAC9D,MACID,EAAM,KAAK,WAAa,QAClB,CAAC,oBAAqB,aAAa,EACnC,CAAC,EAGX,SAAA,CAAAd,EAAA,IAAC,SAAA,CACG,UAAWD,EAAO,QAClB,QAAS,IAAMe,EAAM,WAAW,CAACA,EAAM,SAAS,EAE/C,SAAAC,QACMI,EAAA,CAAY,CAAA,EACbnB,EAAA,IAACoB,EAAA,EAAW,CAAA,CAEtB,EAECL,EACUf,EAAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,IAAK,IAAKsB,CAAA,CAAS,EAC1CrB,EAAAA,IAAC,KAAE,UAAWD,EAAO,UAAY,SAAMe,EAAA,KAAK,KAAK,MAAM,EAGzEA,EAAM,KAAK,WAAa,QAAU,GAAMd,EAAA,IAAA,MAAA,CAAI,IAAKc,EAAM,KAAK,KAAK,OAAS,CAAA,EAE1EhB,EAAA,KAAA,OAAA,CAAK,UAAWC,EAAO,OACvB,SAAA,CAAAC,EAAA,IAACsB,EAAW,CAAA,SAAAR,EAAM,KAAK,KAAK,SAAS,EACpCd,EAAA,IAAAI,EAAA,CAAc,SAAMU,EAAA,KAAK,KAAK,WAAW,CAAA,EAC3C,EAEAd,EAAAA,IAAC,KAAE,UAAWD,EAAO,UAAY,SAAMe,EAAA,KAAK,KAAK,SAAU,CAAA,CAAA,CAAA,CAAA,CAG9D,CAGA,MAAMS,GAAmBC,IACjB,CACN,UAAWA,EAAM,UACX,UAAWA,EAAM,SAAA,GAIVC,GAAAA,EAAQF,GAAiB,CAAE,WAAAG,CAAY,CAAA,EAAEb,EAAa,8bCrDrE,SAASc,GAAab,EAAO,CACzB,KAAM,CAACc,EAAeC,CAAgB,EAAIZ,EAAAA,SAAS,MAAS,EACtD,CAACa,EAAYC,CAAa,EAAId,WAAS,EAAK,EAC5C,CAAE,KAAAe,GAASC,IAEjBf,EAAAA,UAAU,IAAM,CACZa,EAAcH,IAAkBd,EAAM,UAAU,SAAS,CAAC,CAAC,GAC5D,CAACc,EAAed,EAAM,UAAU,QAAQ,CAAC,EAE5CI,EAAAA,UAAU,IAAM,EACU,IAAM,CAExB,MAAMgB,EAAWtC,EAAS,KACduC,GAAAA,EAAK,OAASH,GAAQG,EAAK,OAAS,UAAA,EAE5CD,IACAE,EAASF,EAAS,UAAU,EACXL,EAAAjC,EAAS,QAAQsC,CAAQ,CAAC,EAC/C,IAGU,EACf,CAACF,EAAMpC,CAAQ,CAAC,EAEnB,SAASwC,EAASC,EAAO,CACrB,SAAS,gBAAgB,MAAM,YAAY,kBAAmBA,CAAK,CACvE,CAEM,MAAAC,EAAkB,MAAOH,EAAMI,IAAS,CACtC,GAAA,CACMX,MAAAA,EAAgBhC,EAAS,QAAQuC,CAAI,EACrCK,EAAYL,EAAK,aAAa,aAAeM,EAAE,QAAUF,EAAK,KAAK,EAErEX,GAAAA,IAAkB,IAAMY,IAAc,GAAI,CAC1C1B,EAAM,YAAY,CAACc,EAAeY,CAAS,CAAC,EAC5C,MAAME,EAAY,MAAM5B,EAAM,UAAUyB,EAAK,OAAO,EACpDzB,EAAM,UAAU4B,CAAS,CAAA,MAEzB,QAAQ,MAAM,4BAA4B,OAElC,CAEhB,CAAA,EAIA,OAAA5C,EAAA,KAAC6C,EAAO,IAAP,CACG,UAAW5C,EAAO,aAClB,QAAS,CAAE,QAAS,EAAG,MAAO,MAAO,EACrC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,GAAI,KAAM,WAAY,EAE9C,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,UAAY,CAAA,EAClCC,EAAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,cAAgB,CAAA,EACtCC,EAAAA,IAAA,MAAA,CAAI,UAAWD,EAAO,EAAI,CAAA,QAE1B6C,EAAO,EAAA,EAEPhD,EAAS,IAAKuC,GAAS,CAChB,GAAAA,EAAK,OAASH,EAAM,CACd,MAAAzC,EAAgBsD,EAAyBV,EAAK,YAAY,EAEhE,cACK,MACG,CAAA,SAAA,CAAAnC,EAAA,IAACX,EAAA,CACG,KAAM8C,EACN,cAAA5C,CAAA,CACJ,EAEAS,EAAAA,IAAC,OAAI,UAAWD,EAAO,cACnB,SAACC,EAAAA,IAAA,MAAA,CAAI,QAAS,IAAMsC,EAAgBH,EAAMA,EAAK,aAAa,CAAC,CAAC,EAC1D,eAACW,EAAW,CAAA,WAAYhB,EAAY,CAAA,CACxC,CACJ,CAAA,EAEChC,EAAA,KAAA,MAAA,CAAI,UAAWC,EAAO,SACnB,SAAA,CAAAC,EAAAA,IAACI,GAAa,SAAC,GAAA,CAAA,EACfJ,EAAAA,IAACI,GAAa,SAAM,QAAA,CAAA,EACpBJ,EAAAA,IAACI,GAAa,SAAQ,UAAA,CAAA,CAAA,EAC1B,EAEAJ,EAAAA,IAAC,OAAI,UAAWD,EAAO,cAClB,SAAKoC,EAAA,aAAa,IAAKI,GACpBvC,EAAA,IAAC,MAAA,CAEG,QAAS,IAAMsC,EAAgBH,EAAMI,CAAI,EACzC,UAAWxC,EAAO,QAElB,SAAAC,EAAA,IAACa,GAAA,CACG,KAAM,CACF,SAAUsB,EAAK,KACf,KAAAI,CACJ,CAAA,CACJ,CAAA,EATKA,EAAK,KAWjB,CAAA,EACL,EAEAvC,EAAAA,IAACK,GAAe,CAAA,KAAM8B,CAAM,CAAA,CAAA,GAnCtBA,EAAK,KAoCf,CAER,CAAA,CACH,CAAA,CAAA,CAAA,CAGb,CAEA,MAAMZ,GAAmBC,IAAW,CAChC,UAAWA,EAAM,SACrB,GAEeC,GAAAA,EAAQF,GAAiB,CAAE,YAAAwB,CAAa,CAAA,EAAEpB,EAAY"}